@startuml
abstract AbstractSupport {
    + AbstractSupport(int locationX, int locationY, int speedX, int speedY)
    + forward(): void
    + {abstract} Effect(HeroAircraft heroAircraft):void
}

class Bomb {
    +Bomb(int locationX, int locationY, int speedX, int speedY)
    +Effect(HeroAircraft heroAircraft):void
}

class Fire {
    +Fire(int locationX, int locationY, int speedX, int speedY)
    +Effect(HeroAircraft heroAircraft):void
}

class Heal {
    +Heal(int locationX, int locationY, int speedX, int speedY)
    +Effect(HeroAircraft heroAircraft):void
}
class PlusFire
{
    +plusFire(int locationX, int locationY, int speedX, int speedY)
    +Effect(HeroAircraft heroAircraft):void
}
class MateProp{
    +MateProp(int locationX, int locationY, int speedX, int speedY):void
    +Effect(HeroAircraft heroAircraft):void
    +Effect(HeroAircraft heroAircraft, List<AbstractAircraft> mateAircrafts):void
}
AbstractSupport <|-- Bomb
AbstractSupport <|-- Fire
AbstractSupport <|-- Heal
AbstractSupport <|-- PlusFire
AbstractSupport <|-- MateProp


abstract class SupportFactory {
    +{abstract}CreatSupport(int locationX, int locationY, int speedX, int speedY):AbstractSupport;
}
class BombFactory {
    +CreatSupport(int locationX, int locationY, int speedX, int speedY):AbstractSupport;
}
class FireFactory {
    +CreatSupport(int locationX, int locationY, int speedX, int speedY):AbstractSupport;
}

class HealFactory {
    +CreatSupport(int locationX, int locationY, int speedX, int speedY):AbstractSupport;
}

class PlusFireFactory
{
    +CreatSupport(int locationX, int locationY, int speedX, int speedY):AbstractSupport;
}

class MateSupFactory
{
    +CreatSupport(int locationX, int locationY, int speedX, int speedY):AbstractSupport;
}
HealFactory ..> Heal
BombFactory ..> Bomb
FireFactory ..> Fire
PlusFireFactory ..> PlusFire
MateSupFactory ..> MateProp
SupportFactory <|-- BombFactory
SupportFactory <|-- FireFactory
SupportFactory <|-- HealFactory
SupportFactory <|-- PlusFireFactory
SupportFactory <|-- MateSupFactory

class game{}
game --> AbstractSupport
game --> SupportFactory
@enduml